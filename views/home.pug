extends layout

block content
	script(type="text/javascript").
		var sensors = {};
	nav.navbar.navbar-expand-md.fixed-top
		.container
			a.navbar-brand(href='#') Miblab Weatherstation
			button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarCollapse', aria-controls='navbarCollapse', aria-expanded='false', aria-label='Toggle navigation')
				span.navbar-toggler-icon
			#navbarCollapse.collapse.navbar-collapse
				ul.navbar-nav.mr-auto
					//li.nav-item.active
						// a.nav-link(href='#')
						//	| Home 
						//	span.sr-only (current)

				button.btn.btn-sm.btn-outline-secondary.my-2.my-sm-0(type="submit")#logoutButton
					span.icon.ion-power
					|  Logout
	.container
		.d-flex.flex-wrap.justify-content-between
			each prop in docs
				script(type="text/javascript").
					sensors["#{prop.sensor.locationID}"] = "#{prop.sensor.data.sensorObjectID}";
				.card.widget
					.card-title.d-flex.justify-content-between
						.widget-sensorname #{prop.sensor.data.sensorName}
						.widget-title #{prop.sensor.locationID}
						.widget-sensorstatus
							if (moment().format('X') - moment(prop.sensor.data.timestamp * 1000).format('X')) <= (2*prop.sensor.sendInterval)
								//.icon.ion-checkmark-circled(style="color: #40B271")
							else
								.icon.ion-alert-circled(style="color:#FF5147" title="Sensor down")
					.card-body
						.card-group.widget-featuregroup
							.card.widget-feature(id="t/" + prop.sensor.data.sensorObjectID)
								.card-body.mx-auto
									.card-feature.ion-thermometer
									.card-feature-value #{prop.sensor.data.weatherData.temperatureEnvironment}
									.card-feature-unit °C
							.card.widget-feature(id="p/" + prop.sensor.data.sensorObjectID)
								.card-body.mx-auto
									.card-feature.ion-speedometer
									.card-feature-value #{prop.sensor.data.weatherData.pressure} 
									.card-feature-unit mbar
							.card.widget-feature(id="h/" + prop.sensor.data.sensorObjectID)
								.card-body.mx-auto
									.card-feature.ion-waterdrop
									.card-feature-value #{prop.sensor.data.weatherData.humidity} 
									.card-feature-unit %
					.card-footer
						.card-timestamp.ion-clock  
							.p #{moment(prop.sensor.data.timestamp*1000).format('LL')} #{moment(prop.sensor.data.timestamp*1000).format('LT')}

		.card.container-yaml
			.card-body
				#drag-and-drop.text-center
					.icon-drag-and-drop.ion-archive
					span Drop yaml file here.
				output#yaml-list
		.card#container-lineplot(style='display:none')
			.card-header
				.btn-toolbar.justify-content-between(role='toolbar', aria-label='Toolbar with button groups')
					.plot-title
					.btn-group.btn-group-xs.mx-auto(role='group', aria-label='First group')
						button.btn.btn-outline-dark(type='button')#btn24h 24h
						button.btn.btn-outline-dark(type='button')#btn48h 48h
						button.btn.btn-outline-dark(type='button')#btn1w 1w
						button.btn.btn-outline-dark(type='button')#btn1m 1m
					button.close(type='button', data-dismiss='alert', aria-label='Close')#btnLineplotClose
						span(aria-hidden='true') ×
			.card-body
				#lineplot(style='width:100%; height:400px;')
			.card-footer
				.d-flex.justify-content-end
					button.btn.btn-xs.btn-dark(type='button').btn-export Download Plot Data




				













			



		